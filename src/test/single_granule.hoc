stim_amp=0.01875

// This is the absolute path on my machine (feel free to add your own as it doesn't hurt)
nrn_load_dll("/home/tclose/kbrain/xml/cerebellum/ncml/build/nmodl/x86_64/.libs/libnrnmech.so")

create soma

soma {
    
    // For Granule Cell
    nseg=1
    diam=11.8
    L=11.8 
    Ra=100
    cm=1
    celsius = 30
  
    insert CGC_Lkg1 
//    insert CGC_Lkg2
//    insert CGC_Na 
//    insert CGC_KV
//    insert CGC_KA 
//    insert CGC_Kir 
//    insert CGC_KCa 
//    insert CGC_CaHVA
//    insert CGC_Ca
    insert CGC_KM 
  
    gl_CGC_Lkg1=5.68e-5   //2009 model
//    ggaba_CGC_Lkg2 = 3e-05    //2009 model
//    gkbar_CGC_KV= 0.003    //2009 model
//    gkbar_CGC_KA = 0.0032   //2009 model
//    gkbar_CGC_Kir = 0.0009  //2009 model
    gkbar_CGC_KM= 0.00025   //0.0001  //2009 model
//    gnabar_CGC_Na= 0.013     //2009 model  
//    gcabar_CGC_Ca= 0.00046    //2009 model
//    gkbar_CGC_KCa = 0.04   //ajusted Version 3
//  
//    beta_CGC_Ca = 1.5
    
//    usetable_CGC_Na   = 0                 
//    usetable_CGC_KV   = 0
//    usetable_CGC_KA   = 0
//    usetable_CGC_Kir  = 0   
//    usetable_CGC_KCa  = 0
//    usetable_CGC_CaHVA  = 0
//    usetable_CGC_KM   = 0
    
//    ena = 87.39
    ek = -84.69
//    //eca = 129.33
//    ecl = -65
        
    psection()
}

//printf("ena: %f", ena)
printf("ek: %f", ek)
//printf("eca: %f", eca)
//printf("ecl: %f", ecl)
printf("celsius: %f", celsius)
objectvar stim
soma stim = new IClamp(0.5)
stim.del = 1000
stim.dur = 1000
stim.amp = stim_amp
 
objref rec_v
rec_v = new Vector()
rec_v.record (&soma.v(0.5))

objref rec_t
rec_t = new Vector()
rec_t.record (&t)

dt = 0.025
tstop = 2000
run()

objref output_file
output_file = new File()
output_file.wopen("/home/tclose/kbrain/output/single_granule_hoc.dat")
for (i=0; i < rec_v.size(); i=i+1) {
  output_file.printf("%g %g\n", rec_t.x[i], rec_v.x[i])
}
output_file.close()
quit()
