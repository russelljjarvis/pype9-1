stim_amp=0.01875

// This is the absolute path on my machine (feel free to add your own as it doesn't hurt)
nrn_load_dll("/home/tclose/kbrain/external/fabios_network/x86_64/.libs/libnrnmech.so")

create soma
create axon
create dend[3]

create soma
soma {

    nseg = 1
    diam = 27
    L = 27
    Ra = 100 
    celsius = 23
    
    insert Golgi_lkg
    insert Golgi_Na
    insert Golgi_NaR
    insert Golgi_NaP   
    insert Golgi_Ca_HVA
    insert Golgi_Ca_LVA
    insert Golgi_KV
    insert Golgi_KM
    insert Golgi_KA    
    insert Golgi_BK
    insert Golgi_SK2
    insert Golgi_hcn1
    insert Golgi_hcn2
    insert Golgi_CALC
    insert Golgi_CALC_ca2
    
    usetable_Golgi_LVA = 0
    usetable_Golgi_HVA = 0
    usetable_Golgi_KA = 0
    usetable_Golgi_KV = 0
    usetable_Golgi_NaR = 0
    usetable_Golgi_KM = 0
    usetable_Golgi_Na = 0
    usetable_Golgi_NaP = 0
    
    cai0_ca_ion = 50e-6
    ca2i0_ca2_ion = cai0_ca_ion
    
    cai = cai0_ca_ion
    
    ca2i = cai
    ca2o = cao
    
    cai0_Golgi_CALC = cai0_ca_ion
    ca2i0_Golgi_CALC_ca2 = cai0_ca_ion
    
    ena=87.39
    ek=-84.69
    
    insert na_conc
    nai0_na_ion = 5
    nai = nai0_na_ion
    nai0_na_conc = nai0_na_ion
    beta_na_conc=0.075
    
    insert k_conc
    ki0_k_ion = 140
    ki = ki0_k_ion
    ki0_k_conc = ki0_k_ion
    beta_k_conc=0.075
    
    //Ionic Concentrations for a typical Mammalian cell (Johnston and Wu)
//    nao_nakpump=145 
//    ko_nakpump=5 
//    Nai_inf_nakpump=5
//    Ki_inf_nakpump=140
//    ATPi_nakpump=5     // 0 mM  
  
    psection()
    
}
    
create dend[3]
for i=0,2 {
    dend[i] {
        nseg = 10
        diam = 3
        L = 113
        Ra = 100
        celsius = 23
        insert Golgi_lkg  
    }
    connect dend[i](0), soma(1) 
}

 
access soma
printf("ena: %f", ena)
printf("ek: %f", ek)
printf("eca: %f", eca)
//printf("ecl: %f", ecl)
printf("celsius: %f", celsius)
objectvar stim
 
objref rec_v
rec_v = new Vector()
rec_v.record (&soma.v(0.5))

objref rec_t
rec_t = new Vector()
rec_t.record (&t)

dt = 0.025
tstop = 2000
run()

objref output_file
output_file = new File()
output_file.wopen("/home/tclose/kbrain/output/single_fabios_golgi_hoc.dat")
for (i=0; i < rec_v.size(); i=i+1) {
  output_file.printf("%g %g\n", rec_t.x[i], rec_v.x[i])
}
output_file.close()
quit()
