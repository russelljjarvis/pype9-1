// Test of the StandardIF class
// Andrew P. Davison, UNIC, CNRS, May 2006
// $Id: test_StandardIF.hoc 888 2011-01-04 15:17:54Z apdavison $

// Note: this needs converting to use Dict


xopen("standardCells.hoc")
create dummy_section
access dummy_section

objref cell_IExp[2], cell_GExp[2], cell_IAlpha[2], cell_GAlpha[2]
objref cell_params, Isyn_params, Gsyn_params
objref spikesource[2], connList


// === Parameters ==============================================================

thresh   = 0    // (mV)
delay    = 0    // (ms)
iweight  = -5.0 // (nA)
gweight  = 0.1  // (uS)
t_refrac = 0.0  // (ms)
rate     = 100  // (spikes/s)
onset    = 10   // (ms)
noise    = 1
tstop    = 100  // (ms)

// === Create cells ============================================================

// Fill parameter vectors
cell_params = new Vector(6)
cell_params.x[0] = 15.0  // tau_m
cell_params.x[1] = 1.0   // CM
cell_params.x[2] = -67   // v_rest
cell_params.x[3] = -52   // v_thresh
cell_params.x[4] = -70   // v_reset
cell_params.x[5] = t_refrac

Isyn_params = new Vector(1)
Isyn_params.x[0] = 2     // tau_syn

Gsyn_params = new Vector(4)
Gsyn_params.x[0] = 2     // tau_e
Gsyn_params.x[1] = 6     // tau_i
Gsyn_params.x[2] = 5     // e_e
Gsyn_params.x[3] = -75   // e_i

// Create cells
cell_IExp[0]   = new StandardIF("current",    "exp")
cell_IAlpha[0] = new StandardIF("current",    "alpha")
cell_IExp[1]   = new StandardIF("current",    "exp",   cell_params, Isyn_params)
cell_IAlpha[1] = new StandardIF("current",    "alpha", cell_params, Isyn_params)

cell_GExp[0]   = new StandardIF("conductance","exp")
cell_GAlpha[0] = new StandardIF("conductance","alpha")
cell_GExp[1]   = new StandardIF("conductance","exp",   cell_params, Gsyn_params)
cell_GAlpha[1] = new StandardIF("conductance","alpha", cell_params, Gsyn_params)

for i = 0,1 {
  spikesource[i] = new NetStim(0.5)
  spikesource[i].start    = onset
  spikesource[i].number   = 1e12
  spikesource[i].noise    = noise
  spikesource[i].interval = 1000/rate
}


// === Create connections ======================================================

connList = new List()

for i = 0,1 {
  // Excitatory inputs
  connList.append(new NetCon(spikesource[0], cell_IExp[i].esyn,   thresh, delay, iweight))
  connList.append(new NetCon(spikesource[0], cell_IAlpha[i].esyn, thresh, delay, iweight))
  connList.append(new NetCon(spikesource[0], cell_GExp[i].esyn,  thresh, delay, gweight))
  connList.append(new NetCon(spikesource[0], cell_GAlpha[i].esyn,thresh, delay, gweight))
  // Inhibitory inputs
  connList.append(new NetCon(spikesource[1], cell_IExp[i].isyn,   thresh, delay, -iweight))
  connList.append(new NetCon(spikesource[1], cell_IAlpha[i].isyn, thresh, delay, -iweight))
  connList.append(new NetCon(spikesource[1], cell_GExp[i].isyn,  thresh, delay, gweight))
  connList.append(new NetCon(spikesource[1], cell_GAlpha[i].isyn,thresh, delay, gweight))
}

// === Initialisation ==========================================================

cell_IExp[0].memb_init(-65)
cell_IAlpha[0].memb_init(-65)
cell_IExp[1].memb_init(-67)
cell_IAlpha[1].memb_init(-67)

cell_GExp[0].memb_init(-65)
cell_GAlpha[0].memb_init(-65)
cell_GExp[1].memb_init(-67)
cell_GAlpha[1].memb_init(-67)

// === Create GUI ==============================================================

objref g, mainPanel, vpanel, ipanel
strdef varname

proc addgraph() {
  g = new Graph()
  sprint(varname,"%s[0].%s",$s1,$s2)
  g.addvar(varname,2,1)
  sprint(varname,"%s[1].%s",$s1,$s2)
  g.addvar(varname,3,1)
  g.size(0,tstop,$3,$4)
  graphList[0].append(g)
}

mainPanel = new HBox()
mainPanel.intercept(1)
vpanel = new VBox()
vpanel.intercept(1)
addgraph("cell_IExp",  "cell.v", -80,45)
addgraph("cell_IAlpha","cell.v", -80,45)
addgraph("cell_GExp",  "cell.v", -80,45)
addgraph("cell_GAlpha","cell.v", -80,45)
vpanel.intercept(0)
vpanel.map()
ipanel = new VBox()
ipanel.intercept(1)
addgraph("cell_IExp",  "esyn.i", -10,10)
addgraph("cell_IAlpha","esyn.i", -10,10)
addgraph("cell_GExp",  "esyn.i", -15,0)
addgraph("cell_GAlpha","esyn.i", -15,0)
ipanel.intercept(0)
ipanel.map()
mainPanel.intercept(0)
mainPanel.map("test_StandardIF")

