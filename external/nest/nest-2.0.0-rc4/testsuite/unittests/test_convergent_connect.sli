/*
 *  test_convergent_connect.sli
 *
 *  This file is part of NEST
 *
 *  Copyright (C) 2008 by
 *  The NEST Initiative
 *
 *  See the file AUTHORS for details.
 *
 *  Permission is granted to compile and modify
 *  this file for non-commercial use.
 *  See the file LICENSE for details.
 *
 */


/* BeginDocumentation
   Name: testsuite::test_convergent_connect - sli script to test the ConvergentConnect function.

   Synopsis: (test_convergent_connect) run -> compare response with reference data
   Description:
   Tests the use of the ConvergentConnect function by using all variant
   of the function and comparing the result to the expected result.

   FirstVersion: 03/2009
   Author: Jochen Martin Eppler
   SeeAlso: ConvergentConnect, testsuite::test_random_convergent_connect, testsuite::test_divergent_connect
 */

/unittest (8093) require
/unittest using

0.1 /h Set
0.1 /c Set
40 /n Set
10 /n_per_trial Set

ResetKernel

% Set settings for root network. These
% settings could be changed to test different
% aspects of simulation.
[0] <<
      /local_num_threads 2
      /resolution h
    >> SetStatus

% Create some target neurons.
/iaf_neuron n Create ;

% Get list of source neuron IDs.
[n] Range n_per_trial Partition /src Set

% Create different target nodes for each variant.
/spike_detector Create /sd Set

% test "sources target" variant
src 0 get sd ConvergentConnect
src 0 get {
  /source Set
  << /source source /synapse_type /static_synapse >> FindConnections
  { GetStatus } Map { /target get } Map
  [ sd ] eq assert_or_die
} forall

% test "sources target synmodel" variant
src 1 get sd /static_synapse ConvergentConnect
src 1 get {
  /source Set
  << /source source /synapse_type /static_synapse >> FindConnections
  { GetStatus } Map { /target get } Map
  [ sd ] eq assert_or_die
} forall

% Define arrays of weights and delays for the other variants
[n_per_trial] Range {cvd} Map /w Set
n_per_trial array 1 add {cvd} Map /d Set

% test "sources target weights delays" variant
src 2 get sd w d ConvergentConnect
src 2 get {
  /source Set
  << /source source /synapse_type /static_synapse >> FindConnections
  { GetStatus } Map { /target get } Map
  [ sd ] eq assert_or_die
} forall
[ src 2 get {
  /source Set
  << /source source /synapse_type /static_synapse >> FindConnections
  { GetStatus } Map { /weight get } Map
} forall ] Flatten Sort
w eq assert_or_die

% test "sources target weights delays synmodel" variant
src 3 get sd w d /static_synapse ConvergentConnect
src 3 get {
  /source Set
  << /source source /synapse_type /static_synapse >> FindConnections
  { GetStatus } Map { /target get } Map
  [ sd ] eq assert_or_die
} forall
[ src 3 get {
  /source Set
  << /source source /synapse_type /static_synapse >> FindConnections
  { GetStatus } Map { /weight get } Map
} forall ] Flatten Sort
w eq assert_or_die

endusing