nrn_load_dll("/home/tclose/kbrain/xml/cerebellum/ncml/build/neuron/Purkinje_Khaliq03/install/x86_64/.libs/libnrnmech.so")

create soma
access soma

//insert Purkinje_Khaliq03_Narsg
//insert Purkinje_Khaliq03_kpkj
//insert Purkinje_Khaliq03_kpkj2
//insert Purkinje_Khaliq03_kpkjslow
//insert Purkinje_Khaliq03_bkpkj
//insert Purkinje_Khaliq03_cadiff
//insert Purkinje_Khaliq03_cap
//insert Purkinje_Khaliq03_lkpkj
//insert Purkinje_Khaliq03_hpkj

insert Purkinje_Khaliq03_CaBK
insert Purkinje_Khaliq03_CaP
insert Purkinje_Khaliq03_Ih
insert Purkinje_Khaliq03_K1
insert Purkinje_Khaliq03_K2
insert Purkinje_Khaliq03_K3
insert Purkinje_Khaliq03_Leak
insert Purkinje_Khaliq03_Narsg
insert Purkinje_Khaliq03_ca
insert Purkinje_Khaliq03_soma

soma {
  L = 20
  diam = 20
  ena = 60
  ek = -88
}


objref rec_v
rec_v = new Vector()
rec_v.record (&soma.v(0.5))

objref rec_t
rec_t = new Vector()
rec_t.record (&t)

dt = 0.025
tstop = 2000
run()

objref output_file
output_file = new File()
printf("Writing output to '../../../../output/ncml_generated_purkinje.dat'")
output_file.wopen("../../../../output/ncml_generated_purkinje.dat")
for (i=0; i < rec_v.size(); i=i+1) {
  output_file.printf("%g %g\n", rec_t.x[i], rec_v.x[i])
}
output_file.close()
