// This is the absolute path on my machine (feel free to add your own as it doesn't hurt)
nrn_load_dll("/home/tclose/kbrain/external/original_mod/sergios_golgi/x86_64/.libs/libnrnmech.so")

objref SpikeTrain, netcon, nil
objref exc[78], inh[27], synapses
objref RT_Vm, EL_Vm

RT_Vm = new Vector()
EL_Vm = new Vector()
create soma
soma {
    nseg = 1
    diam = 27 // 22 pF Dieudonne98
    L = 27
    Ra = 100 // From Roth&Hausser2000
    celsius = 23

    insert Golgi_BK
    insert Golgi_Ca_HVA
    insert Golgi_Ca_LVA
    insert Golgi_CALC
    insert Golgi_CALC_ca2
    insert Golgi_hcn1
    insert Golgi_hcn2
    insert Golgi_KA
    insert Golgi_KM
    insert Golgi_KV
    insert Golgi_lkg
    insert Golgi_Na
    insert Golgi_NaR
    insert Golgi_NaP
    insert Golgi_SK2
    
    usetable_Golgi_LVA = 0
    usetable_Golgi_HVA = 0
    usetable_Golgi_KA = 0
    usetable_Golgi_KV = 0
    usetable_Golgi_NaR = 0
    usetable_Golgi_KM = 0
    usetable_Golgi_Na = 0
    usetable_Golgi_NaP = 0
    
    cai0_ca_ion = 50e-6
    ca2i0_ca2_ion = cai0_ca_ion
    cai = cai0_ca_ion
    ca2i = cai
    ca2o = cao
    cai0_Golgi_CALC = cai0_ca_ion
    ca2i0_Golgi_CALC_ca2 = cai0_ca_ion
    
    ena=87.39
    ek=-84.69
      
//    SpikeTrain = new Vector()
//    netcon = new NetCon(&v(0.5),nil)
//    netcon.threshold=-20
//    netcon.record(SpikeTrain)
//    
//    RT_Vm.record(&v(0.5))
    
}
    
//create dend[3]
//for i=0,2 {
//    dend[i] {
//        celsius = 23
//        nseg = 10
//        diam = 3
//        L = 113
//        Ra = 100
//        celsius = 23
//        
//        insert Golgi_lkg
//        for k=0, 25 {
//            exc[(i*26)+k] = new Synapse(0.5)
//        }
//        for k=0, 8 {
//            inh[(i*9)+k] = new Synapse(0.5)
//            inh[(i*9)+k].Erev = -60
//        }
//    }
//    connect dend[i](0), soma(1) 
//}
//    
    
//create axon
//axon {
//  nseg = 100
//  diam = 2.4 // gives 90 pF to get to the 145 pF Forti06
//  L = 1200
//  Ra = 100
//  celsius = 23
//  insert Golgi_lkg
//}
//connect axon(0), soma(0)
//    
//create elec,seal
//elec {
//    nseg = 1
//    diam = 3
//    L = 1000
//    Ra = 36
//    cm = 0.0015
//    celsius = 23
//    EL_Vm.record(&v(0.5))
//
//}
//        
//seal {
//    nseg = 1
//    diam = 3
//    L = 1
//    Ra = 1
//    cm = 0.0001
//    celsius = 23
//}
//       
//connect seal(1), soma(1)
//connect elec(1), seal(0)
//    
    
access soma    
psection()

printf("ena: %f", ena)
printf("ek: %f", ek)
printf("eca: %f", eca)
printf("celsius: %f", celsius)
objectvar stim
 
objref rec_v
rec_v = new Vector()
rec_v.record (&soma.v(0.5))

objref rec_t
rec_t = new Vector()
rec_t.record (&t)

dt = 0.025
tstop = 2000
run()

objref output_file
output_file = new File()
printf("Writing output to 'output/single_compart_sergios_golgi_hoc.dat'")
output_file.wopen("output/single_compart_sergios_golgi_hoc.dat")
for (i=0; i < rec_v.size(); i=i+1) {
  output_file.printf("%g %g\n", rec_t.x[i], rec_v.x[i])
}
output_file.close()
quit()
