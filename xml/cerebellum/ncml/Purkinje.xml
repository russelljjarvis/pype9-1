<?xml version="1.0" encoding="UTF-8"?>
<ncml:model xmlns:ncml="ncml">
    <!--<include href="SimpleIonChannel.xml"/> -->
    <cell id="Purkinje">
        <notes>A model of a Purkinje cell</notes>
        <morphology id="Compartmental">
            <!-- Segments -->
            <!-- Soma segment -->
            <segment id="soma">
                <proximal x="0" y="0" z="0" diameter="17.5" />
                <distal x="0" y="0" z="15" diameter="17.5" />
            </segment>
            <!-- Trunk segment -->
            <segment id="trunk">
                <parent segment="soma" />
                <distal x="0" y="0" z="77.5" diameter="8" />
            </segment>
            <!-- Fork segments -->
            <segment id="fork_0">
                <parent segment="trunk" />
                <distal x="0" y="-62.5" z="140" diameter="2" />
            </segment>
            <segment id="fork_1">
                <parent segment="trunk" />
                <distal x="0" y="62.5" z="140" diameter="2" />
            </segment>
            <!-- Leaf 0 segments -->
            <segment id="leaf_0_0">
                <parent segment="fork_0" />
                <distal x="0" y="-93.75" z="171.25" diameter="0.5" />
            </segment>
            <segment id="leaf_0_1">
                <parent segment="leaf_0_0" />
                <distal x="0" y="-93.75" z="202.5" diameter="0.5" />
            </segment>
            <segment id="leaf_0_2">
                <parent segment="leaf_0_1" />
                <distal x="0" y="-93.75" z="233.75" diameter="0.5" />
            </segment>
            <segment id="leaf_0_3">
                <parent segment="leaf_0_2" />
                <distal x="0" y="-93.75" z="265" diameter="0.5" />
            </segment>
            <!-- Leaf 1 segments -->
            <segment id="leaf_1_0">
                <parent segment="fork_0" />
                <distal x="0" y="-31.25" z="171.25" diameter="0.5" />
            </segment>
            <segment id="leaf_1_1">
                <parent segment="leaf_1_0" />
                <distal x="0" y="-31.25" z="202.5" diameter="0.5" />
            </segment>
            <segment id="leaf_1_2">
                <parent segment="leaf_1_1" />
                <distal x="0" y="-31.25" z="233.75" diameter="0.5" />
            </segment>
            <segment id="leaf_1_3">
                <parent segment="leaf_1_2" />
                <distal x="0" y="-31.25" z="265" diameter="0.5" />
            </segment>
            <!-- Leaf 2 segments -->
            <segment id="leaf_2_0">
                <parent segment="fork_1" />
                <distal x="0" y="31.25" z="171.25" diameter="0.5" />
            </segment>
            <segment id="leaf_2_1">
                <parent segment="leaf_2_0" />
                <distal x="0" y="31.25" z="202.5" diameter="0.5" />
            </segment>
            <segment id="leaf_2_2">
                <parent segment="leaf_2_1" />
                <distal x="0" y="31.25" z="233.75" diameter="0.5" />
            </segment>
            <segment id="leaf_2_3">
                <parent segment="leaf_2_2" />
                <distal x="0" y="31.25" z="265" diameter="0.5" />
            </segment>
            <!-- Leaf 3 segments -->
            <segment id="leaf_3_0">
                <parent segment="fork_1" />
                <distal x="0" y="93.75" z="171.25" diameter="0.5" />
            </segment>
            <segment id="leaf_3_1">
                <parent segment="leaf_3_0" />
                <distal x="0" y="93.75" z="202.5" diameter="0.5" />
            </segment>
            <segment id="leaf_3_2">
                <parent segment="leaf_3_1" />
                <distal x="0" y="93.75" z="233.75" diameter="0.5" />
            </segment>
            <segment id="leaf_3_3">
                <parent segment="leaf_3_2" />
                <distal x="0" y="93.75" z="265" diameter="0.5" />
            </segment>
            <!-- Segment groups -->
            <segmentGroup id="soma_group">
                <member segment="soma" />
            </segmentGroup>
            <segmentGroup id="trunk_group">
                <member segment="trunk" />
            </segmentGroup>
            <segmentGroup id="fork_group">
                <member segment="fork_0" />
                <member segment="fork_1" />
            </segmentGroup>
            <segmentGroup id="leaves_group">
                <member segment="leaf_0_0" />
                <member segment="leaf_0_1" />
                <member segment="leaf_0_2" />
                <member segment="leaf_0_3" />
                <member segment="leaf_1_0" />
                <member segment="leaf_1_1" />
                <member segment="leaf_1_2" />
                <member segment="leaf_1_3" />
                <member segment="leaf_2_0" />
                <member segment="leaf_2_1" />
                <member segment="leaf_2_2" />
                <member segment="leaf_2_3" />
                <member segment="leaf_3_0" />
                <member segment="leaf_3_1" />
                <member segment="leaf_3_2" />
                <member segment="leaf_3_3" />
            </segmentGroup>
        </morphology>
        <biophysicalProperties id="AckermannKnopfel">
            <membraneProperties>
                <!-- type="PostSynaptic_Conductance for synapse with Granule cell" -->
                <ncml:input name="v" />
                <ncml:input name="cai" from="ion-pools" />
                <ncml:input name="ica" from="ion-currents" />
                <ncml:const name="celsius" value="24" />
                <ncml:const name="temp_adj">pow (3 ((celsius - 22) / 10))</ncml:const>
                <ncml:defun name="ghk">
                    <ncml:arg>v</ncml:arg>
                    <ncml:arg>celsius</ncml:arg>
                    <ncml:arg>ci</ncml:arg>
                    <ncml:arg>co</ncml:arg>
                    <ncml:body> let ((F 96485.0) (R 8.3145)) (let ((zeta ((2e-3 * F * v) / (R *
                        (273.19 + celsius))))) (if ((abs (1.0 - exp (neg (zeta)))) &lt; 1e-6) then
                        (1e-6 * (2 * F) * (ci - (co * exp (neg (zeta)))) * (1.0 + (zeta / 2))) else
                        ((1e-6 * (2 * zeta * F) * (ci - (co * exp (neg (zeta))))) / (1.0 - exp (neg
                        (zeta)))))) 
                    </ncml:body>
                </ncml:defun>
                <ncml:conductanceSynapse id="Exp2Syn" segmentGroup="leaves_group">
                    <ncml:const name="tau1" value="0.5" units="ms" />
                    <ncml:const name="tau2" value="1.2" units="ms" />
                    <ncml:const name="e" value="0.0" units="mV" />
                </ncml:conductanceSynapse>
                <ncml:component type="ionic-current" name="Kv1">
                    <ncml:component type="gate">
                        <!-- Rate Functions -->
                        <ncml:defun name="Kv1_amf">
                            <ncml:arg>v</ncml:arg>
                            <ncml:body> let ( (cma 0.12889) (cka -33.90877) (cva 45)) (cma * (exp
                                (neg ((v + cva) / cka))) )
                            </ncml:body>
                        </ncml:defun>
                        <ncml:defun name="Kv1_bmf">
                            <ncml:arg>v</ncml:arg>
                            <ncml:body> let ((cmb 0.12889) (ckb 12.42101) (cvb 45)) (cmb * (exp (neg
                                ((v + cvb) / ckb))))
                            </ncml:body>
                        </ncml:defun>
                        <ncml:hh_ionic_gate name="Kv1">
                            <!-- ion name: exported variables will be of the form {ion}_{id} -->
                            <ncml:initial_m> (Kv1_amf (Vrest) / (Kv1_amf (Vrest) + Kv1_bmf (Vrest)))
                            </ncml:initial_m>
                            <ncml:m_power> 4</ncml:m_power>
                            <ncml:h_power> 0</ncml:h_power>
                            <ncml:m_alpha> (temp_adj * Kv1_amf (v) )</ncml:m_alpha>
                            <ncml:m_beta> (temp_adj * Kv1_bmf (v) )</ncml:m_beta>
                        </ncml:hh_ionic_gate>
                    </ncml:component>
                    <ncml:component type="pore">
                        <ncml:const name="gbar_Kv1" value="1e3 * 0.011" />
                        <ncml:output name="gbar_Kv1" />
                    </ncml:component>
                    <ncml:component type="permeating-ion" name="k">
                        <ncml:const name="e_Kv1" value="-85" />
                        <ncml:output name="e_Kv1" />
                    </ncml:component>
                </ncml:component>
                <ncml:component type="ionic-current" name="Kv3">
                    <ncml:component type="gate">
                        <!-- Rate Functions -->
                        <ncml:defun name="Kv3_amf">
                            <ncml:arg>v</ncml:arg>
                            <ncml:body> (let ((ca 0.22) (cva 16) (cka -26.5)) (ca * exp((neg (v +
                                cva)) / cka) ))
                            </ncml:body>
                        </ncml:defun>
                        <ncml:defun name="Kv3_bmf">
                            <ncml:arg>v</ncml:arg>
                            <ncml:body> (let ((ca 0.22) (cvb 16) (ckb 26.5)) (ca * exp((neg (v +
                                cvb)) / ckb) ))
                            </ncml:body>
                        </ncml:defun>
                        <ncml:hh_ionic_gate name="Kv3">
                            <!-- ion name: exported variables will be of the form {ion}_{id} -->
                            <ncml:initial_m> (Kv3_amf (Vrest) / (Kv3_amf (Vrest) + Kv3_bmf (Vrest)))
                            </ncml:initial_m>
                            <ncml:m_power> 4</ncml:m_power>
                            <ncml:h_power> 0</ncml:h_power>
                            <ncml:m_alpha> (temp_adj * Kv3_amf (v) )</ncml:m_alpha>
                            <ncml:m_beta> (temp_adj * Kv3_bmf (v) )</ncml:m_beta>
                        </ncml:hh_ionic_gate>
                    </ncml:component>
                    <ncml:component type="pore">
                        <ncml:const name="gbar_Kv3" value="1e3 * 0.005" />
                        <ncml:output name="gbar_Kv3" />
                    </ncml:component>
                    <ncml:component type="permeating-ion" name="k">
                        <ncml:const name="e_Kv3" value="-85" />
                        <ncml:output name="e_Kv3" />
                    </ncml:component>
                    <ncml:component type="binary-gate">
                        <ncml:const name="switch_Kv3" value="0" />
                        <ncml:const name="e0" value="1.60217646e-19" />
                        <ncml:const name="gunit" value="16" />
                        <ncml:const name="nc"> 1e12 * gbar_Kv3 / gunit
                        </ncml:const>
                        <ncml:const name="zn" value="1.9196" />
                        <ncml:defun name="gate_flip_Kv3">
                            <ncml:arg>v</ncml:arg>
                            <ncml:arg>m</ncml:arg>
                            <ncml:body> let ((a (Kv3_amf (v))) (ab (a + Kv3_bmf(v))) (tau (1 / ab))
                                (inf (a / ab))) ((inf - m) / tau)
                            </ncml:body>
                        </ncml:defun>
                        <ncml:asgn name="i_gate_Kv3"> if (switch_Kv3 &gt; 0) then (nc * 1e6 * e0 * 4 *
                            zn * gate_flip_Kv3(v Kv3_m)) else 0 
                        </ncml:asgn>
                        <ncml:output name="i_gate_Kv3" />
                    </ncml:component>
                </ncml:component>
                <ncml:component type="ionic-current" name="Kv4">
                    <ncml:component type="gate">
                        <!-- Rate Functions -->
                        <ncml:defun name="Kv4_amf">
                            <ncml:arg>v</ncml:arg>
                            <ncml:body> (let ((can 0.15743) (ckan -32.19976) (cvan 57)) (can * exp
                                (neg ((v + cvan) / ckan))))
                            </ncml:body>
                        </ncml:defun>
                        <ncml:defun name="Kv4_bmf">
                            <ncml:arg>v</ncml:arg>
                            <ncml:body> (let ((cbn 0.15743) (ckbn 37.51346) (cvbn 57)) (cbn * exp
                                (neg ((v + cvbn) / ckbn))))
                            </ncml:body>
                        </ncml:defun>
                        <ncml:defun name="Kv4_ahf">
                            <ncml:arg>v</ncml:arg>
                            <ncml:body> (let ((cah 0.01342) (ckah -7.86476) (cvah 60)) (cah / (1.0 +
                                (exp (neg ((v + cvah) / ckah))))))
                            </ncml:body>
                        </ncml:defun>
                        <ncml:defun name="Kv4_bhf">
                            <ncml:arg>v</ncml:arg>
                            <ncml:body> (let ((cbh 0.04477) (ckbh 11.3615) (cvbh 54)) (cbh / (1.0 +
                                (exp (neg ((v + cvbh) / ckbh))))))
                            </ncml:body>
                        </ncml:defun>
                        <ncml:hh_ionic_gate name="Kv4">
                            <!-- ion name: exported variables will be of the form {ion}_{id} -->
                            <ncml:initial_m> (Kv4_amf (Vrest) / (Kv4_amf (Vrest) + Kv4_bmf (Vrest)))
                            </ncml:initial_m>
                            <ncml:initial_h> (Kv4_ahf (Vrest) / (Kv4_ahf (Vrest) + Kv4_bhf (Vrest)))
                            </ncml:initial_h>
                            <ncml:m_power> 4</ncml:m_power>
                            <ncml:h_power> 1</ncml:h_power>
                            <ncml:m_alpha> (temp_adj * Kv4_amf (v))</ncml:m_alpha>
                            <ncml:m_beta> (temp_adj * Kv4_bmf (v))</ncml:m_beta>
                            <ncml:h_alpha> (temp_adj * Kv4_ahf (v))</ncml:h_alpha>
                            <ncml:h_beta> (temp_adj * Kv4_bhf (v))</ncml:h_beta>
                        </ncml:hh_ionic_gate>
                    </ncml:component>
                    <ncml:component type="pore">
                        <ncml:const name="gbar_Kv4" value="1e3 * 0.0039" />
                        <ncml:output name="gbar_Kv4" />
                    </ncml:component>
                    <ncml:component type="permeating-ion" name="k">
                        <ncml:const name="e_Kv4" value="-85" />
                        <ncml:output name="e_Kv4" />
                    </ncml:component>
                </ncml:component>
                <ncml:component type="ionic-current" name="Ih">
                    <ncml:component type="gate">
                        <!-- Rate Functions -->
                        <ncml:defun name="Ih_inf">
                            <ncml:arg>v</ncml:arg>
                            <ncml:body> (let ((cvn 90.1) (ckn -9.9)) (1.0 / (1.0 + exp (neg ((v +
                                cvn) / ckn) ))))
                            </ncml:body>
                        </ncml:defun>
                        <ncml:defun name="Ih_tau">
                            <ncml:arg>v</ncml:arg>
                            <ncml:body> (let ((cct 190) (cat 720) (cvt 81.5) (ckt 11.9)) (cct + (cat
                                * exp (neg (pow (((v + cvt) / ckt) 2))))))
                            </ncml:body>
                        </ncml:defun>
                        <ncml:hh_ionic_gate name="Ih">
                            <!-- ion name: bexported variables will be of the form {ion}_{id} -->
                            <ncml:initial_m> (Ih_inf (Vrest))</ncml:initial_m>
                            <ncml:m_power> 1</ncml:m_power>
                            <ncml:h_power> 0</ncml:h_power>
                            <ncml:m_inf> Ih_inf (v)</ncml:m_inf>
                            <ncml:m_tau> Ih_tau (v) / temp_adj</ncml:m_tau>
                        </ncml:hh_ionic_gate>
                    </ncml:component>
                    <ncml:component type="pore">
                        <ncml:const name="gbar_Ih" value="1e3 * 0.0002" />
                        <ncml:output name="gbar_Ih" />
                    </ncml:component>
                    <ncml:component type="permeating-ion" name="non-specific">
                        <ncml:const name="e_Ih" value="-30" />
                        <ncml:output name="e_Ih" />
                    </ncml:component>
                </ncml:component>
                <ncml:component type="ionic-current" name="Leak">
                    <ncml:component type="pore">
                        <ncml:const name="gbar_Leak" value="1e3 * 9e-5" />
                        <ncml:output name="gbar_Leak" />
                    </ncml:component>
                    <ncml:component type="permeating-ion" name="non-specific">
                        <ncml:const name="e_Leak" value="-61" />
                        <ncml:output name="e_Leak" />
                    </ncml:component>
                </ncml:component>
                <ncml:component type="ionic-current" name="CaP">
                    <ncml:component type="gate">
                        <!-- Rate Functions -->
                        <ncml:defun name="CaP_inf">
                            <ncml:arg>v</ncml:arg>
                            <ncml:body> (let ((cv 19) (ck 5.5)) (1.0 / (1.0 + exp (neg ((v + cv) /
                                ck)))))
                            </ncml:body>
                        </ncml:defun>
                        <ncml:defun name="CaP_tau">
                            <ncml:arg>v</ncml:arg>
                            <ncml:body> (if (v &gt; -50) then (1e3 * (0.000191 + (0.00376 * pow
                                ((exp (neg ((v + 41.9) / 27.8))) 2)))) else (1e3 * (0.00026367 +
                                (0.1278 * exp (0.10327 * v))))) 
                            </ncml:body>
                        </ncml:defun>
                        <ncml:hh_ionic_gate name="CaP">
                            <!-- ion name: exported variables will be of the form {ion}_{id} -->
                            <ncml:initial_m> (CaP_inf (Vrest))</ncml:initial_m>
                            <ncml:m_power> 1</ncml:m_power>
                            <ncml:h_power> 0</ncml:h_power>
                            <ncml:m_inf> (CaP_inf (v))</ncml:m_inf>
                            <ncml:m_tau> (CaP_tau (v) / temp_adj)</ncml:m_tau>
                        </ncml:hh_ionic_gate>
                    </ncml:component>
                    <ncml:component type="permeability">
                        <ncml:const name="pcabar_CaP" value="1e3 * 0.01667" />
                        <ncml:const name="cao" value="2.4" />
                        <ncml:asgn name="pca_CaP"> pcabar_CaP * ghk (v celsius cai cao)</ncml:asgn>
                        <ncml:output name="pca_CaP" />
                    </ncml:component>
                    <ncml:component type="permeating-ion" name="ca" />
                </ncml:component>
                <ncml:component type="ionic-current" name="CaBK">
                    <ncml:component type="gate">
                        <!-- Rate Functions -->
                        <ncml:defun name="CaBK_zinf">
                            <ncml:arg>cai</ncml:arg>
                            <ncml:body> let ((zhalf 0.001)) (1 / (1 + (zhalf / cai)))
                            </ncml:body>
                        </ncml:defun>
                        <ncml:const name="CaBK_ztau" value="1.0" />
                        <ncml:defun name="CaBK_minf">
                            <ncml:arg>v</ncml:arg>
                            <ncml:body> let ((cvm 28.9) (ckm 6.2)) (1.0 / (1.0 + exp (neg ((v + 5.0
                                + cvm) / ckm))))
                            </ncml:body>
                        </ncml:defun>
                        <ncml:defun name="CaBK_mtau">
                            <ncml:arg>v</ncml:arg>
                            <ncml:body> let ((ctm 0.000505) (cvtm1 86.4) (cktm1 -10.1) (cvtm2 -33.3)
                                (cktm2 10)) (ctm + (1.0 / (exp (neg ((v + 5.0 + cvtm1) / cktm1)) +
                                exp (neg ((v + 5.0 + cvtm2) / cktm2)))))
                            </ncml:body>
                        </ncml:defun>
                        <ncml:defun name="CaBK_hinf">
                            <ncml:arg>v</ncml:arg>
                            <ncml:body> let ((ch 0.085) (cvh 32) (ckh -5.8)) (ch + ((1.0 - ch) /
                                (1.0 + (exp (neg ((v + 5.0 + cvh) / ckh))))))
                            </ncml:body>
                        </ncml:defun>
                        <ncml:defun name="CaBK_htau">
                            <ncml:arg>v</ncml:arg>
                            <ncml:body> (let ((cth 0.0019) (cvth1 48.5) (ckth1 -5.2) (cvth2 -54.2)
                                (ckth2 12.9)) (cth + (1.0 / (exp (neg ((v + cvth1) / ckth1)) + exp
                                (neg ((v + cvth2) / ckth2))))))
                            </ncml:body>
                        </ncml:defun>
                        <ncml:asgn name="CaBK_alpha"> (CaBK_zinf (cai) / CaBK_ztau)
                        </ncml:asgn>
                        <ncml:asgn name="CaBK_beta"> ((1 - CaBK_zinf (cai)) / CaBK_ztau)
                        </ncml:asgn>
                        <ncml:reaction name="CaBK_z">
                            <ncml:transitions>
                                <ncml:transition src="C" dst="O">
                                    <ncml:rate>CaBK_beta</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="O" dst="C">
                                    <ncml:rate>CaBK_alpha</ncml:rate>
                                </ncml:transition>
                            </ncml:transitions>
                            <ncml:conserve val="1">
                                <ncml:expr> (O + C)</ncml:expr>
                            </ncml:conserve>
                            <ncml:initial> (CaBK_zinf (1e-4))</ncml:initial>
                            <ncml:open>O</ncml:open>
                            <ncml:power>2</ncml:power>
                        </ncml:reaction>
                        <ncml:output name="CaBK_z" />
                        <ncml:hh_ionic_gate name="CaBK">
                            <!-- ion name: exported variables will be of the form {ion}_{id} -->
                            <ncml:initial_m> (CaBK_minf (Vrest) / temp_adj)</ncml:initial_m>
                            <ncml:initial_h> (CaBK_hinf (Vrest) / temp_adj)</ncml:initial_h>
                            <ncml:m_power> 3</ncml:m_power>
                            <ncml:h_power> 1</ncml:h_power>
                            <ncml:m_inf> (CaBK_minf (v) / temp_adj)</ncml:m_inf>
                            <ncml:m_tau> (CaBK_mtau (v) / temp_adj)</ncml:m_tau>
                            <ncml:h_inf> (CaBK_hinf (v) / temp_adj)</ncml:h_inf>
                            <ncml:h_tau> (CaBK_htau (v) / temp_adj)</ncml:h_tau>
                        </ncml:hh_ionic_gate>
                    </ncml:component>
                    <ncml:component type="pore">
                        <ncml:const name="gbar_CaBK" value="1e3 * 0.014" />
                        <ncml:output name="gbar_CaBK" />
                    </ncml:component>
                    <ncml:component type="permeating-ion" name="k">
                        <ncml:const name="e_CaBK" value="-85" />
                        <ncml:output name="e_CaBK" />
                    </ncml:component>
                </ncml:component>
                <ncml:functor name="Nafun" type="ionic-current"
                    parameters="Na_gbar,Na_Con,Na_Coff,Na_Oon,Na_Ooff,Na_alfac,Na_btfac,Na_alpha,Na_beta,Na_gamma,Na_delta,Na_epsilon,Na_zeta,Na_x1,Na_x2,Na_x3,Na_x4,Na_x5,Na_x6">
                    <ncml:component type="gate">
                        <!-- rate functions -->
                        <ncml:asgn name="f01"> 4.0 * Na_alpha * exp (v / Na_x1) * temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="f02"> 3.0 * Na_alpha * exp (v / Na_x1) * temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="f03"> 2.0 * Na_alpha * exp (v / Na_x1) * temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="f04"> Na_alpha * exp (v / Na_x1) * temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="f0O"> Na_gamma * exp (v / Na_x3) * temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="fip"> Na_epsilon * exp (v / Na_x5) * temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="f11"> 4.0 * Na_alpha * Na_alfac * exp (v / Na_x1) *
                            temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="f12"> 3.0 * Na_alpha * Na_alfac * exp (v / Na_x1) *
                            temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="f13"> 2.0 * Na_alpha * Na_alfac * exp (v / Na_x1) *
                            temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="f14"> Na_alpha * Na_alfac * exp (v / Na_x1) * temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="f1n"> Na_gamma * exp (v / Na_x3) * temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="fi1"> Na_Con * temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="fi2"> Na_Con * Na_alfac * temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="fi3"> Na_Con * Na_alfac * Na_alfac * temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="fi4"> Na_Con * Na_alfac * Na_alfac * Na_alfac *
                            temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="fi5"> Na_Con * Na_alfac * Na_alfac * Na_alfac *
                            Na_alfac * temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="fin"> Na_Oon * temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="b01"> Na_beta * exp (v / Na_x2) * temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="b02"> 2.0 * Na_beta * exp (v / Na_x2) * temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="b03"> 3.0 * Na_beta * exp (v / Na_x2) * temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="b04"> 4.0 * Na_beta * exp (v / Na_x2) * temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="b0O"> Na_delta * exp (v / Na_x4) * temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="bip"> Na_zeta * exp (v / Na_x6) * temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="b11"> Na_beta * Na_btfac * exp (v / Na_x2) * temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="b12"> 2.0 * Na_beta * Na_btfac * exp (v / Na_x2) *
                            temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="b13"> 3.0 * Na_beta * Na_btfac * exp (v / Na_x2) *
                            temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="b14"> 4.0 * Na_beta * Na_btfac * exp (v / Na_x2) *
                            temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="b1n"> Na_delta * exp (v / Na_x4) * temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="bi1"> Na_Coff * temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="bi2"> Na_Coff * Na_btfac * temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="bi3"> Na_Coff * Na_btfac * Na_btfac * temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="bi4"> Na_Coff * Na_btfac * Na_btfac * Na_btfac *
                            temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="bi5"> Na_Coff * Na_btfac * Na_btfac * Na_btfac *
                            Na_btfac * temp_adj
                        </ncml:asgn>
                        <ncml:asgn name="bin"> Na_Ooff * temp_adj
                        </ncml:asgn>
                        <ncml:reaction name="Na_z">
                            <ncml:transitions>
                                <ncml:transition src="C1" dst="C2">
                                    <ncml:rate>f01</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="C2" dst="C1">
                                    <ncml:rate>b01</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="C2" dst="C3">
                                    <ncml:rate>f02</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="C3" dst="C2">
                                    <ncml:rate>b02</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="C3" dst="C4">
                                    <ncml:rate>f03</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="C4" dst="C3">
                                    <ncml:rate>b03</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="C4" dst="C5">
                                    <ncml:rate>f04</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="C5" dst="C4">
                                    <ncml:rate>b04</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="C5" dst="O">
                                    <ncml:rate>f0O</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="O" dst="C5">
                                    <ncml:rate>b0O</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="O" dst="B">
                                    <ncml:rate>fip</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="B" dst="O">
                                    <ncml:rate>bip</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="O" dst="I6">
                                    <ncml:rate>fin</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="I6" dst="O">
                                    <ncml:rate>bin</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="I1" dst="I2">
                                    <ncml:rate>f11</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="I2" dst="I1">
                                    <ncml:rate>b11</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="I2" dst="I3">
                                    <ncml:rate>f12</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="I3" dst="I2">
                                    <ncml:rate>b12</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="I3" dst="I4">
                                    <ncml:rate>f13</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="I4" dst="I3">
                                    <ncml:rate>b13</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="I4" dst="I5">
                                    <ncml:rate>f14</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="I5" dst="I4">
                                    <ncml:rate>b14</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="I5" dst="I6">
                                    <ncml:rate>f1n</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="I6" dst="I5">
                                    <ncml:rate>b1n</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="C1" dst="I1">
                                    <ncml:rate>fi1</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="I1" dst="C1">
                                    <ncml:rate>bi1</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="C2" dst="I2">
                                    <ncml:rate>fi2</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="I2" dst="C2">
                                    <ncml:rate>bi2</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="C3" dst="I3">
                                    <ncml:rate>fi3</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="I3" dst="C3">
                                    <ncml:rate>bi3</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="C4" dst="I4">
                                    <ncml:rate>fi4</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="I4" dst="C4">
                                    <ncml:rate>bi4</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="C5" dst="I5">
                                    <ncml:rate>fi5</ncml:rate>
                                </ncml:transition>
                                <ncml:transition src="I5" dst="C5">
                                    <ncml:rate>bi5</ncml:rate>
                                </ncml:transition>
                            </ncml:transitions>
                            <ncml:conserve val="1">
                                <ncml:expr> (C1 + C2 + C3 + C4 + C5 + O + B + I1 + I2 + I3 + I4 + I5
                                    + I6)
                                </ncml:expr>
                            </ncml:conserve>
                            <ncml:open>O</ncml:open>
                            <ncml:power>1</ncml:power>
                        </ncml:reaction>
                        <ncml:output name="Na_z" />
                    </ncml:component>
                    <ncml:component type="pore">
                        <ncml:const name="gbar" value="Na_gbar" />
                        <ncml:output name="gbar" />
                    </ncml:component>
                    <ncml:component type="permeating-ion" name="na">
                        <ncml:const name="e" value="-88" />
                        <ncml:output name="e" />
                    </ncml:component>
                </ncml:functor>
                <ncml:component name="Na" functor="Nafun">
                    <ncml:const name="Na_gbar" value="1e3 * 0.014" />
                    <ncml:const name="Na_Con" value="0.005" />
                    <ncml:const name="Na_Coff" value="0.5" />
                    <ncml:const name="Na_Oon" value="2.3" />
                    <ncml:const name="Na_Ooff" value="0.005" />
                    <ncml:const name="Na_alfac"> pow ((Na_Oon / Na_Con) (1.0 / 4.0))
                    </ncml:const>
                    <ncml:const name="Na_btfac"> pow ((Na_Ooff / Na_Coff) (1.0 / 4.0))
                    </ncml:const>
                    <ncml:const name="Na_alpha" value="150" />
                    <ncml:const name="Na_beta" value="3" />
                    <ncml:const name="Na_gamma" value="150" />
                    <ncml:const name="Na_delta" value="40" />
                    <ncml:const name="Na_epsilon" value="1e-12" />
                    <ncml:const name="Na_zeta" value="0.03" />
                    <ncml:const name="Na_x1" value="20" />
                    <ncml:const name="Na_x2" value="-20" />
                    <ncml:const name="Na_x3" value="1000000000000.0" />
                    <ncml:const name="Na_x4" value="1000000000000.0" />
                    <ncml:const name="Na_x5" value="1000000000000.0" />
                    <ncml:const name="Na_x6" value="-25" />
                </ncml:component>
                <ncml:component name="Narsg" functor="Nafun">
                    <ncml:const name="Na_gbar" value="1e3 * 0.016" />
                    <ncml:const name="Na_Con" value="0.005" />
                    <ncml:const name="Na_Coff" value="0.5" />
                    <ncml:const name="Na_Oon" value="0.75" />
                    <ncml:const name="Na_Ooff" value="0.005" />
                    <ncml:const name="Na_alfac"> pow ((Na_Oon / Na_Con) (1.0 / 4.0))
                    </ncml:const>
                    <ncml:const name="Na_btfac"> pow ((Na_Ooff / Na_Coff) (1.0 / 4.0))
                    </ncml:const>
                    <ncml:const name="Na_alpha" value="150" />
                    <ncml:const name="Na_beta" value="3" />
                    <ncml:const name="Na_gamma" value="150" />
                    <ncml:const name="Na_delta" value="40" />
                    <ncml:const name="Na_epsilon" value="1.75" />
                    <ncml:const name="Na_zeta" value="0.03" />
                    <ncml:const name="Na_x1" value="20" />
                    <ncml:const name="Na_x2" value="-20" />
                    <ncml:const name="Na_x3" value="1000000000000.0" />
                    <ncml:const name="Na_x4" value="-1000000000000.0" />
                    <ncml:const name="Na_x5" value="1000000000000.0" />
                    <ncml:const name="Na_x6" value="-25" />
                </ncml:component>
            </membraneProperties>
            <intracellularProperties>
                <specificCapacitance segmentGroup="soma_group" value="1.0"
                    units="uF_per_cm2" />
                <specificCapacitance segmentGroup="leaves_group" value="2.0"
                    units="uF_per_cm2" />
                <reversalPotential species="k" value="-77" units="mV" />
                <resistivity value="100" units="ohm_cm" />  <!-- Used for specific axial resistance -->
            </intracellularProperties>
        </biophysicalProperties>
    </cell>
</ncml:model>